% read_plot.m Reads data from a .csv file then writes a selection of that
% data to a new .csv file and plots the data on a 2D plot.

% Clear the workspace
clear;

% Set variable for sample time used in exercise 3.2 Data recorded at 100Hz
dt=0.01;

% Read data from the waterwheel_data.csv file using the csvread function. Note
% that the .csv file has a header containing text defining the content of
% each column, this must not be read from the file. 
% Alter the below function such that it reads all the data in the file bar the first row.

data = csvread('waterwheel_data_1.csv', 1, 0);

% Below you can get just the power by extracting the column
% from the data matrix we've just read.

power_1 = data(:,2); % Uncomment this line by pressing ctrl+T or going to Text -> Uncomment in the menu.

% Next we will read from a second data file but this time we want to just
% read the column containing the power data.

% First we determine the size of the data:

s = size(csvread('waterwheel_data_2.csv', 1, 0));

% Now we read the data using s(1) as an index in the range argument of csvread.

power_2 = csvread('waterwheel_data_2.csv', 1, 1, [1,1,s(1),1]);

% To set up arrays for the time we need to know the total time the data is
% recorded over, to do this we can multiply the length of the data (-1 due to the first point being zero) by the
% sample time.

total_time_1 = (length(power_1)-1)*dt;
total_time_2 = (length(power_2)-1)*dt;

% Set up arrays for the time that will match the length of 
time_1 = 0:dt:total_time_1;
time_2 = 0:dt:total_time_2;

% Plot the two data sets on the same plot and then undertake separate plots using subplot
% function
figure(1)
plot(time_1, power_1,time_2, power_2) 
xlabel('Time (sec)');
ylabel('Power (mW)');
title('Power generated by the two waterwheels');
legend('Waterwheel 1', 'Waterwheel 2');

figure(2)

subplot(1,2,1); % Subplot(m,n,p) defines the grid of plots m x n and the current plot number p
plot(time_1, power_1);
xlabel('Time (sec)');
ylabel('Power (mW)');
title('Power generated by waterwheel 1')

subplot(1,2,2);
plot(time_2, power_2);
xlabel('Time (sec)');
ylabel('Power (mW)');
title('Power generated by waterwheel 2')

avg_power_1 = mean(power_1);
avg_power_2 = mean(power_2);

if avg_power_1 > avg_power_2
    disp(['Waterwheel 1 generated the most power of ' num2str(avg_power_1) 'mW'])
else
    disp(['Waterwheel 2 generated the most power of ' num2str(avg_power_2) 'mW'])
end
    



